datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Search {
  createdAt     DateTime       @default(now())
  userName      String?
  userEmail     String?
  query         String         @db.Text
  userId        String
  prefixFilters String
  countryOption String         @default("hk")
  id            String         @id @default(uuid())
  minDate       DateTime?
  maxDate       DateTime?
  searchResults SearchResult[]
  resultsShown  Int            @default(3)

  @@index([userId])
}

model SearchResult {
  createdAt      DateTime @default(now())
  userName       String?
  userEmail      String?
  caseName       String
  caseNeutralCit String
  caseActionNo   String
  caseDate       DateTime
  caseUrl        String
  id             String   @id @default(uuid())
  searchId       String
  userId         String

  search   Search    @relation(fields: [searchId], references: [id])
  messages Message[]

  @@index([searchId])
  @@index([userId])
}

enum Role {
  user
  assistant
}

model Message {
  createdAt      DateTime @default(now())
  userName       String?
  userEmail      String?
  id             String   @id @default(uuid())
  role           Role
  content        String   @db.Text
  userId         String
  searchResultId String

  searchResult SearchResult @relation(fields: [searchResultId], references: [id])

  @@index([searchResultId])
  @@index([userId])
}

model FastAskMessage {
  createdAt DateTime @default(now())
  userName  String?
  userEmail String?
  id        String   @id @default(uuid())
  role      Role
  content   String   @db.Text
  userId    String

  @@index([userId])
}

model UserSubscription {
  id                     String    @id @default(cuid())
  userId                 String    @unique
  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")
}

model UserSearchCredit {
  id        String   @id @default(cuid())
  userId    String   @unique
  userName  String?
  userEmail String?
  count     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserMessageCredit {
  id        String   @id @default(cuid())
  userId    String   @unique
  userName  String?
  userEmail String?
  count     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
